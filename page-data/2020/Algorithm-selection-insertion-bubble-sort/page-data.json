{"componentChunkName":"component---src-components-posts-post-template-index-js","path":"/2020/Algorithm-selection-insertion-bubble-sort/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"선택정렬/버블정렬/삽입정렬\",\n  \"date\": \"2021-06-24T00:00:00.000Z\",\n  \"tags\": [\"Algorithm\"],\n  \"excerpt\": \"시간복잡도와 공간복잡도\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", {\n    \"id\": \"선택정렬-selection-sort\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%EC%84%A0%ED%83%9D%EC%A0%95%EB%A0%AC-selection-sort\",\n    \"aria-label\": \"선택정렬 selection sort permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\uC120\\uD0DD\\uC815\\uB82C (Selection sort)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9E8 \\uC55E\\uC758 \\uC778\\uB371\\uC2A4\\uBD80\\uD130 \\uC9C0\\uC815\\uD558\\uACE0, \\uADF8 \\uB4A4\\uC758 \\uC6D0\\uC18C\\uB4E4 \\uC911 \\uCD5C\\uC18C\\uAC12\\uC744 \\uCC3E\\uC544 \\uC9C0\\uC815\\uD55C \\uC778\\uB371\\uC2A4\\uC640 \\uAD50\\uD658\\uD55C\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"// \\uC7AC\\uADC0\\uD568\\uC218 \\n    public static void selectionsort(int [] array) {\\n        selectionsort(array, 0);\\n    }\\n\\n    public static void selectionsort(int [] array, int start) {\\n        int min = start;\\n        for (int i = start; i < array.length; i++) {\\n            if (array[min] > array[i]) {\\n                min = i;\\n            }\\n        }\\n        swap(array, start, min); // \\uC815\\uB82C\\n        if (start < array.length-1) {\\n            selectionsort(array, start+1);\\n        }\\n    }\\n\\n    // \\uBCC0\\uC218 \\uAD50\\uD658 \\uD568\\uC218\\n    public static void swap(int [] array, int start, int min) {\\n        int temp = array[start];\\n        array[start] = array[min];\\n        array[min] = temp;\\n    }\\n\\n//main\\n    public static void main(String[] args) {\\n        int [] array = {10,3,8,7,4,5,6,9,2,1};\\n        selectionsort(array);\\n        System.out.println(Arrays.toString(array));\\n\\n    }\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", {\n    \"id\": \"버블정렬-bubble-sort\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%EB%B2%84%EB%B8%94%EC%A0%95%EB%A0%AC-bubble-sort\",\n    \"aria-label\": \"버블정렬 bubble sort permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\uBC84\\uBE14\\uC815\\uB82C (Bubble sort)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC55E\\uC5D0\\uC11C\\uBD80\\uD130 \\uC778\\uC811\\uD55C \\uB450 \\uAC1C\\uC758 \\uC6D0\\uC18C\\uB97C \\uBE44\\uAD50\\uD558\\uC5EC \\uD070 \\uC218\\uB97C \\uB4A4\\uB85C \\uBCF4\\uB0B8\\uB2E4. \\u2192 \\uBC30\\uC5F4\\uC774 \\uB05D\\uB0A0 \\uB54C\\uAE4C\\uC9C0 \\uBC18\\uBCF5\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"// \\uC7AC\\uADC0\\uD568\\uC218 \\n    public static void selectionsort(int [] array) {\\n        selectionsort(array, 0);\\n    }\\n\\n    public static void selectionsort(int [] array, int start) {\\n        int min = start;\\n        for (int i = start; i < array.length; i++) {\\n            if (array[min] > array[i]) {\\n                min = i;\\n            }\\n        }\\n        swap(array, start, min); // \\uC815\\uB82C\\n        if (start < array.length-1) {\\n            selectionsort(array, start+1);\\n        }\\n    }\\n\\n    // \\uBCC0\\uC218 \\uAD50\\uD658 \\uD568\\uC218\\n    public static void swap(int [] array, int start, int min) {\\n        int temp = array[start];\\n        array[start] = array[min];\\n        array[min] = temp;\\n    }\\n\\n//main\\n    public static void main(String[] args) {\\n        int [] array = {10,3,8,7,4,5,6,9,2,1};\\n        selectionsort(array);\\n        System.out.println(Arrays.toString(array));\\n\\n    }\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", {\n    \"id\": \"삽입정렬-insert-sort\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%EC%82%BD%EC%9E%85%EC%A0%95%EB%A0%AC-insert-sort\",\n    \"aria-label\": \"삽입정렬 insert sort permalink\",\n    \"className\": \"anchor-heading before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\uC0BD\\uC785\\uC815\\uB82C (Insert sort)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB450 \\uBC88\\uC9F8 \\uC778\\uB371\\uC2A4 \\uAC12\\uBD80\\uD130 \\uC2DC\\uC791\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC55E\\uC758 \\uC6D0\\uC18C\\uB4E4\\uACFC \\uBE44\\uAD50\\uD558\\uC5EC \\uC815\\uB82C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC815\\uB82C\\uB418\\uC5B4\\uC788\\uC744 \\uACBD\\uC6B0 O(n)\\uC758 \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\\uB97C \\uAC00\\uC9D0\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"public static void insertionSort(int [] array) {\\n        insertionSort(array, array.length-1);\\n    }\\n    public static void insertionSort(int [] array, int end) {\\n        int min = end;\\n        for (int i = end-1; i >= 0; i--) {\\n            if(array[min] < array[i]) {\\n                swap(array, min, i);\\n            }\\n        }\\n        if (end > 0) {\\n            insertionSort(array, end-1);\\n        }\\n    }\\n    \\n    public static void swap(int [] array, int min, int i) {\\n        int temp = array[min];\\n        array[min] = array[i];\\n        array[i] = temp;\\n        \\n    }\\n\\n    public static void main(String[] args) {\\n        int [] array = {2,3,7,8,4,5,6,9,10,1};\\n        insertionSort(array);\\n        System.out.println(Arrays.toString(array));\\n    }\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"\\uC704 \\uC138\\uAC1C\\uC758 \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uBAA8\\uB450 \\uB3D9\\uC77C\\uD55C \\uC2DC\\uAC04\\uBCF5\\uC7A1\\uB3C4\\uC640 \\uACF5\\uAC04\\uBCF5\\uC7A1\\uB3C4\\uB97C \\uAC16\\uB294\\uB2E4. \"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"\\uC2DC\\uAC04\\uBCF5\\uC7A1\\uB3C4\")), \" : O(n^2) \\u2192 (n) + (n-1) + (n-2) + (n-3) ...\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"\\uACF5\\uAC04\\uBCF5\\uC7A1\\uB3C4\")), \" :  O(n) \\u2192 \\uD55C \\uAC1C\\uC758 \\uBC30\\uC5F4\\uC5D0\\uC11C \\uC9C4\\uD589\\uB428\")), mdx(\"p\", null, \"\\uADF8\\uB7EC\\uB098 \\uC0BD\\uC785\\uC815\\uB82C\\uC758 \\uACBD\\uC6B0, \\uC778\\uB371\\uC2A4\\uAC00 \\uC815\\uB82C\\uB418\\uC788\\uB2E4\\uB294 \\uAC00\\uC815 \\uD558\\uC5D0 O(n) \\uC758 \\uC2DC\\uAC04\\uBCF5\\uC7A1\\uB3C4\\uB97C \\uAC16\\uAC8C\\uB41C\\uB2E4. \"), mdx(\"p\", null, \"\\uC815\\uB82C \\uB418\\uC5B4\\uC788\\uB294 \\uC0C1\\uD0DC\\uC5D0\\uC11C\\uB294 \\uCD5C\\uC18C \\uD55C\\uBC88\\uC529 \\uBC16\\uC5D0 \\uBE44\\uAD50\\uB97C \\uD558\\uC9C0 \\uC54A\\uAE30 \\uB54C\\uBB38\\uC774\\uB2E4. \"), mdx(\"p\", null, \"\\uB530\\uB77C\\uC11C \\uC55E\\uC5D0\\uC11C \\uC124\\uBA85\\uD55C \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998 \\uC911 \\uC81C\\uC77C \\uCD5C \\uB2E8\\uC758 \\uC2DC\\uAC04\\uBCF5\\uC7A1\\uB3C4\\uB97C \\uAC16\\uB294\\uB2E4\\uACE0 \\uB9D0 \\uD560 \\uC218 \\uC788\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"시간복잡도와 공간복잡도","fields":{"slug":"/2020/Algorithm-selection-insertion-bubble-sort/"},"frontmatter":{"title":"선택정렬/버블정렬/삽입정렬","date":"06/24/2021","tags":["Algorithm"]}}},"pageContext":{"slug":"/2020/Algorithm-selection-insertion-bubble-sort/","prev":{"fields":{"slug":"/2020/Spring-scope/"},"frontmatter":{"title":"(Spring) Singleton, Prototype","tags":["Spring"],"date":"2021-06-17T00:00:00.000Z","excerpt":"Spring scope","draft":null}}}},"staticQueryHashes":["1703067421","3649515864","63159454"]}